{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import squarify\n",
    "import os\n",
    "    \n",
    "# Main libraries that we will use in this kernel\n",
    "import datetime\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "# # garbage collector: free some memory is needed\n",
    "import gc\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# statistical package and some useful functions to analyze our timeseries\n",
    "from statsmodels.tsa.stattools import pacf\n",
    "from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n",
    "from statsmodels.tsa.seasonal import seasonal_decompose\n",
    "import statsmodels.tsa.stattools as stattools\n",
    "\n",
    "import time\n",
    "\n",
    "from string import punctuation\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from sklearn.linear_model import LinearRegression\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "#full_1 = pd.read_pickle('./full_1.pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "#sociodemog_sort = pd.read_pickle('./sociodemog_sort.pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "#full_2 = pd.merge(full_1,sociodemog_sort,on='id_cliente',how='left')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "full_2 = pd.read_pickle('./full_2.pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Visualización de ventas por mes de tiendas y columnas Productos "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "#full_2[\"date\"] = pd.to_datetime(full_2[\"pk_partition\"])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "#full_2[\"Year\"] = full_2[\"date\"].dt.year"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "#full_2[\"Month\"] = full_2[\"date\"].dt.month"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id_cliente</th>\n",
       "      <th>pk_cid_x</th>\n",
       "      <th>pk_partition_x</th>\n",
       "      <th>Productos</th>\n",
       "      <th>Ventas_cant</th>\n",
       "      <th>Precios</th>\n",
       "      <th>Familia_prod</th>\n",
       "      <th>Ingresos</th>\n",
       "      <th>pk_cid_y</th>\n",
       "      <th>pk_partition_y</th>\n",
       "      <th>...</th>\n",
       "      <th>días_encartera</th>\n",
       "      <th>pk_cid</th>\n",
       "      <th>pk_partition</th>\n",
       "      <th>country_id</th>\n",
       "      <th>region_code</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>deceased</th>\n",
       "      <th>date</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10000282018-01-28</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-01-28</td>\n",
       "      <td>short_term_deposit</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40</td>\n",
       "      <td>Inversión</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-01-28</td>\n",
       "      <td>...</td>\n",
       "      <td>390.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-01-28</td>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>H</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>2018-01-28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10000282018-02-28</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-02-28</td>\n",
       "      <td>short_term_deposit</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40</td>\n",
       "      <td>Inversión</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-02-28</td>\n",
       "      <td>...</td>\n",
       "      <td>421.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-02-28</td>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>H</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>2018-02-28</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10000282018-03-28</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-03-28</td>\n",
       "      <td>short_term_deposit</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40</td>\n",
       "      <td>Inversión</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-03-28</td>\n",
       "      <td>...</td>\n",
       "      <td>449.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-03-28</td>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>H</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>2018-03-28</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10000282018-04-28</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-04-28</td>\n",
       "      <td>short_term_deposit</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40</td>\n",
       "      <td>Inversión</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-04-28</td>\n",
       "      <td>...</td>\n",
       "      <td>480.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-04-28</td>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>H</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>2018-04-28</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10000282018-05-28</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-05-28</td>\n",
       "      <td>short_term_deposit</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40</td>\n",
       "      <td>Inversión</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-05-28</td>\n",
       "      <td>...</td>\n",
       "      <td>510.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-05-28</td>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>H</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>2018-05-28</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>10000282018-06-28</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-06-28</td>\n",
       "      <td>short_term_deposit</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40</td>\n",
       "      <td>Inversión</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-06-28</td>\n",
       "      <td>...</td>\n",
       "      <td>541.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-06-28</td>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>H</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>2018-06-28</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>10000282018-07-28</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-07-28</td>\n",
       "      <td>short_term_deposit</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40</td>\n",
       "      <td>Inversión</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-07-28</td>\n",
       "      <td>...</td>\n",
       "      <td>571.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-07-28</td>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>H</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>2018-07-28</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>10000282018-08-28</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-08-28</td>\n",
       "      <td>short_term_deposit</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40</td>\n",
       "      <td>Inversión</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-08-28</td>\n",
       "      <td>...</td>\n",
       "      <td>602.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-08-28</td>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>H</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>2018-08-28</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>10000282018-09-28</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-09-28</td>\n",
       "      <td>short_term_deposit</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40</td>\n",
       "      <td>Inversión</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-09-28</td>\n",
       "      <td>...</td>\n",
       "      <td>633.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-09-28</td>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>H</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>2018-09-28</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10000282018-10-28</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-10-28</td>\n",
       "      <td>short_term_deposit</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40</td>\n",
       "      <td>Inversión</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-10-28</td>\n",
       "      <td>...</td>\n",
       "      <td>663.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-10-28</td>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>H</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>2018-10-28</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id_cliente pk_cid_x pk_partition_x           Productos  Ventas_cant  \\\n",
       "0  10000282018-01-28  1000028     2018-01-28  short_term_deposit          0.0   \n",
       "1  10000282018-02-28  1000028     2018-02-28  short_term_deposit          0.0   \n",
       "2  10000282018-03-28  1000028     2018-03-28  short_term_deposit          0.0   \n",
       "3  10000282018-04-28  1000028     2018-04-28  short_term_deposit          0.0   \n",
       "4  10000282018-05-28  1000028     2018-05-28  short_term_deposit          0.0   \n",
       "5  10000282018-06-28  1000028     2018-06-28  short_term_deposit          0.0   \n",
       "6  10000282018-07-28  1000028     2018-07-28  short_term_deposit          0.0   \n",
       "7  10000282018-08-28  1000028     2018-08-28  short_term_deposit          0.0   \n",
       "8  10000282018-09-28  1000028     2018-09-28  short_term_deposit          0.0   \n",
       "9  10000282018-10-28  1000028     2018-10-28  short_term_deposit          0.0   \n",
       "\n",
       "   Precios Familia_prod  Ingresos pk_cid_y pk_partition_y  ... días_encartera  \\\n",
       "0       40    Inversión       0.0  1000028     2018-01-28  ...          390.0   \n",
       "1       40    Inversión       0.0  1000028     2018-02-28  ...          421.0   \n",
       "2       40    Inversión       0.0  1000028     2018-03-28  ...          449.0   \n",
       "3       40    Inversión       0.0  1000028     2018-04-28  ...          480.0   \n",
       "4       40    Inversión       0.0  1000028     2018-05-28  ...          510.0   \n",
       "5       40    Inversión       0.0  1000028     2018-06-28  ...          541.0   \n",
       "6       40    Inversión       0.0  1000028     2018-07-28  ...          571.0   \n",
       "7       40    Inversión       0.0  1000028     2018-08-28  ...          602.0   \n",
       "8       40    Inversión       0.0  1000028     2018-09-28  ...          633.0   \n",
       "9       40    Inversión       0.0  1000028     2018-10-28  ...          663.0   \n",
       "\n",
       "    pk_cid pk_partition  country_id region_code gender age  deceased  \\\n",
       "0  1000028   2018-01-28          ES        28.0      H  43         N   \n",
       "1  1000028   2018-02-28          ES        28.0      H  43         N   \n",
       "2  1000028   2018-03-28          ES        28.0      H  43         N   \n",
       "3  1000028   2018-04-28          ES        28.0      H  43         N   \n",
       "4  1000028   2018-05-28          ES        28.0      H  43         N   \n",
       "5  1000028   2018-06-28          ES        28.0      H  43         N   \n",
       "6  1000028   2018-07-28          ES        28.0      H  43         N   \n",
       "7  1000028   2018-08-28          ES        28.0      H  43         N   \n",
       "8  1000028   2018-09-28          ES        28.0      H  43         N   \n",
       "9  1000028   2018-10-28          ES        28.0      H  43         N   \n",
       "\n",
       "        date  Month  \n",
       "0 2018-01-28      1  \n",
       "1 2018-02-28      2  \n",
       "2 2018-03-28      3  \n",
       "3 2018-04-28      4  \n",
       "4 2018-05-28      5  \n",
       "5 2018-06-28      6  \n",
       "6 2018-07-28      7  \n",
       "7 2018-08-28      8  \n",
       "8 2018-09-28      9  \n",
       "9 2018-10-28     10  \n",
       "\n",
       "[10 rows x 23 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "full_2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "#pd.to_pickle(full_2, './full_2.pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = full_2[[\"date\",'Ventas_cant']].set_index(\"date\").resample(\"M\").sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Ventas_cant</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2018-01-31</th>\n",
       "      <td>296613.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-02-28</th>\n",
       "      <td>302458.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-03-31</th>\n",
       "      <td>308879.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-04-30</th>\n",
       "      <td>313499.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-05-31</th>\n",
       "      <td>316422.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Ventas_cant\n",
       "date                   \n",
       "2018-01-31     296613.0\n",
       "2018-02-28     302458.0\n",
       "2018-03-31     308879.0\n",
       "2018-04-30     313499.0\n",
       "2018-05-31     316422.0"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#¿dónde le estoy diciendo que ese sea el dataset?\n",
    "plt.figure(figsize = (10, 6))\n",
    "plt.plot(x, color = \"blue\", label = \"Monthly quantity\")\n",
    "plt.title(\"Monthly quantity\")\n",
    "plt.legend();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = full_2[[\"date\", \"Ingresos\"]].set_index(\"date\").resample(\"M\").sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Ingresos</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2018-01-31</th>\n",
       "      <td>3623680.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-02-28</th>\n",
       "      <td>3719340.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-03-31</th>\n",
       "      <td>3819690.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-04-30</th>\n",
       "      <td>3907510.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-05-31</th>\n",
       "      <td>3929800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-06-30</th>\n",
       "      <td>4044620.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-07-31</th>\n",
       "      <td>4243310.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-08-31</th>\n",
       "      <td>4354950.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-09-30</th>\n",
       "      <td>4586900.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-10-31</th>\n",
       "      <td>4842420.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-11-30</th>\n",
       "      <td>4974090.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018-12-31</th>\n",
       "      <td>5110960.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-01-31</th>\n",
       "      <td>5009150.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-02-28</th>\n",
       "      <td>5193610.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-03-31</th>\n",
       "      <td>5285960.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-04-30</th>\n",
       "      <td>5337410.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019-05-31</th>\n",
       "      <td>5427320.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Ingresos\n",
       "date                 \n",
       "2018-01-31  3623680.0\n",
       "2018-02-28  3719340.0\n",
       "2018-03-31  3819690.0\n",
       "2018-04-30  3907510.0\n",
       "2018-05-31  3929800.0\n",
       "2018-06-30  4044620.0\n",
       "2018-07-31  4243310.0\n",
       "2018-08-31  4354950.0\n",
       "2018-09-30  4586900.0\n",
       "2018-10-31  4842420.0\n",
       "2018-11-30  4974090.0\n",
       "2018-12-31  5110960.0\n",
       "2019-01-31  5009150.0\n",
       "2019-02-28  5193610.0\n",
       "2019-03-31  5285960.0\n",
       "2019-04-30  5337410.0\n",
       "2019-05-31  5427320.0"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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9OnTh3HjxlGzZk0AZs2axV/+8heaNm3K888/z+zZf15NY926dXz88cd0796dFi1acMkll7Bs2TIAWrduTa9evRg+fDibN28u3S9PRESknKxcCWPGRFtDSvZkFafHKZFOPvlkrr32WiZNmsSqVat+P55/aA/+uPNu++23//1Y5cqVycnJKfC1i3PdRRddxJ133slBBx3E+eefv9X5XXbZhenTp/P2228zdOhQXnrpJZ544gl69erF6NGjad68OU899RSTJk360/Nyc3OpVavW7z1reQ0bNozPPvuMN998kxYtWjBt2jRq165dYBtERESiMn8+3HcfPPlkePz99xDrayh36skqhQsuuIABAwZs1YN0zDHH8PzzzwNh6K9OnTq/9yIVpEaNGqxdu7bE79+qVSsWL17MCy+88Kc5YVusXLmS3NxcTjvtNG677Ta++OILANauXcsee+zBpk2bfq8zr5o1a7LPPvvw8ssvAyE0Tp8+HQhztVq1asWtt95KnTp1WLx48VbPFxERicpnn0G3btCoETz+OJx5JmRlRRewIEV7sqKWkZHBVVddtdXxgQMHcv7559OsWTN23HFHnn766W2+Tu3atWndujVNmjShY8eOdO7cudg1nH766UybNo1ddtllq3NLlizh/PPPJzc3F4C77roLgNtuu41WrVrRoEEDmjZtWmDAe/7557nsssu4/fbb2bRpEz169KB58+b069ePuXPn4u60b9+e5s23Wp9WRESkXOXmhiHBe++FDz+EWrXghhugTx/YY4+oqwMraIgrapmZmZ5/TaivvvqKxo0bR1RR8unSpQt9+/alffv2UZcC6M9HRETKz4YN8NxzMHgwzJkDDRpA375w4YWw007lX4+ZTXH3zPzHNVyYYtasWcMBBxzADjvskDQBS0REpDysXg133AENG8LFF8MOO8ALL8C8eXDVVdEErG3RcGGKqVWrFt98803UZYiIiJSbb7+FIUNgxAj49Vfo0AH69YPjjoNk3tlNIUtERESS0pQpcM898PLLULlymMz+j39AvvvOklZKhSx312bESSgZ5/WJiEhqcoexY0O4mjQp3B34j3+E4cAy7GQXiZQJWdWqVWPVqlXUrl1bQSuJuDurVq2iWrVqUZciIiIp7LffYOTIcKfg7NmQkRF+vvjiaJdhKIuUCVkZGRlkZ2ezYsWKqEuRfKpV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\n",
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\r\n",
       "  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\r\n",
       "<!-- Created with matplotlib (https://matplotlib.org/) -->\r\n",
       "<svg height=\"372.35625pt\" version=\"1.1\" viewBox=\"0 0 601.665625 372.35625\" width=\"601.665625pt\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n",
       " <metadata>\r\n",
       "  <rdf:RDF xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\r\n",
       "   <cc:Work>\r\n",
       "    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\r\n",
       "    <dc:date>2021-06-12T11:51:12.937301</dc:date>\r\n",
       "    <dc:format>image/svg+xml</dc:format>\r\n",
       "    <dc:creator>\r\n",
       "     <cc:Agent>\r\n",
       "      <dc:title>Matplotlib v3.3.2, https://matplotlib.org/</dc:title>\r\n",
       "     </cc:Agent>\r\n",
       "    </dc:creator>\r\n",
       "   </cc:Work>\r\n",
       "  </rdf:RDF>\r\n",
       " </metadata>\r\n",
       " <defs>\r\n",
       "  <style type=\"text/css\">*{stroke-linecap:butt;stroke-linejoin:round;}</style>\r\n",
       " </defs>\r\n",
       " <g id=\"figure_1\">\r\n",
       "  <g id=\"patch_1\">\r\n",
       "   <path d=\"M 0 372.35625 \r\n",
       "L 601.665625 372.35625 \r\n",
       "L 601.665625 0 \r\n",
       "L 0 0 \r\n",
       "z\r\n",
       "\" style=\"fill:none;\"/>\r\n",
       "  </g>\r\n",
       "  <g id=\"axes_1\">\r\n",
       "   <g id=\"patch_2\">\r\n",
       "    <path d=\"M 36.465625 348.478125 \r\n",
       "L 594.465625 348.478125 \r\n",
       "L 594.465625 22.318125 \r\n",
       "L 36.465625 22.318125 \r\n",
       "z\r\n",
       "\" style=\"fill:#ffffff;\"/>\r\n",
       "   </g>\r\n",
       "   <g id=\"matplotlib.axis_1\">\r\n",
       "    <g id=\"xtick_1\">\r\n",
       "     <g id=\"line2d_1\">\r\n",
       "      <defs>\r\n",
       "       <path d=\"M 0 0 \r\n",
       "L 0 3.5 \r\n",
       "\" id=\"m30af8aee82\" style=\"stroke:#000000;stroke-width:0.8;\"/>\r\n",
       "      </defs>\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"92.161033\" xlink:href=\"#m30af8aee82\" y=\"348.478125\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_1\">\r\n",
       "      <!-- 2018-03 -->\r\n",
       "      <g transform=\"translate(71.269626 363.076563)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 19.1875 8.296875 \r\n",
       "L 53.609375 8.296875 \r\n",
       "L 53.609375 0 \r\n",
       "L 7.328125 0 \r\n",
       "L 7.328125 8.296875 \r\n",
       "Q 12.9375 14.109375 22.625 23.890625 \r\n",
       "Q 32.328125 33.6875 34.8125 36.53125 \r\n",
       "Q 39.546875 41.84375 41.421875 45.53125 \r\n",
       "Q 43.3125 49.21875 43.3125 52.78125 \r\n",
       "Q 43.3125 58.59375 39.234375 62.25 \r\n",
       "Q 35.15625 65.921875 28.609375 65.921875 \r\n",
       "Q 23.96875 65.921875 18.8125 64.3125 \r\n",
       "Q 13.671875 62.703125 7.8125 59.421875 \r\n",
       "L 7.8125 69.390625 \r\n",
       "Q 13.765625 71.78125 18.9375 73 \r\n",
       "Q 24.125 74.21875 28.421875 74.21875 \r\n",
       "Q 39.75 74.21875 46.484375 68.546875 \r\n",
       "Q 53.21875 62.890625 53.21875 53.421875 \r\n",
       "Q 53.21875 48.921875 51.53125 44.890625 \r\n",
       "Q 49.859375 40.875 45.40625 35.40625 \r\n",
       "Q 44.1875 33.984375 37.640625 27.21875 \r\n",
       "Q 31.109375 20.453125 19.1875 8.296875 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-50\"/>\r\n",
       "        <path d=\"M 31.78125 66.40625 \r\n",
       "Q 24.171875 66.40625 20.328125 58.90625 \r\n",
       "Q 16.5 51.421875 16.5 36.375 \r\n",
       "Q 16.5 21.390625 20.328125 13.890625 \r\n",
       "Q 24.171875 6.390625 31.78125 6.390625 \r\n",
       "Q 39.453125 6.390625 43.28125 13.890625 \r\n",
       "Q 47.125 21.390625 47.125 36.375 \r\n",
       "Q 47.125 51.421875 43.28125 58.90625 \r\n",
       "Q 39.453125 66.40625 31.78125 66.40625 \r\n",
       "z\r\n",
       "M 31.78125 74.21875 \r\n",
       "Q 44.046875 74.21875 50.515625 64.515625 \r\n",
       "Q 56.984375 54.828125 56.984375 36.375 \r\n",
       "Q 56.984375 17.96875 50.515625 8.265625 \r\n",
       "Q 44.046875 -1.421875 31.78125 -1.421875 \r\n",
       "Q 19.53125 -1.421875 13.0625 8.265625 \r\n",
       "Q 6.59375 17.96875 6.59375 36.375 \r\n",
       "Q 6.59375 54.828125 13.0625 64.515625 \r\n",
       "Q 19.53125 74.21875 31.78125 74.21875 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-48\"/>\r\n",
       "        <path d=\"M 12.40625 8.296875 \r\n",
       "L 28.515625 8.296875 \r\n",
       "L 28.515625 63.921875 \r\n",
       "L 10.984375 60.40625 \r\n",
       "L 10.984375 69.390625 \r\n",
       "L 28.421875 72.90625 \r\n",
       "L 38.28125 72.90625 \r\n",
       "L 38.28125 8.296875 \r\n",
       "L 54.390625 8.296875 \r\n",
       "L 54.390625 0 \r\n",
       "L 12.40625 0 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-49\"/>\r\n",
       "        <path d=\"M 31.78125 34.625 \r\n",
       "Q 24.75 34.625 20.71875 30.859375 \r\n",
       "Q 16.703125 27.09375 16.703125 20.515625 \r\n",
       "Q 16.703125 13.921875 20.71875 10.15625 \r\n",
       "Q 24.75 6.390625 31.78125 6.390625 \r\n",
       "Q 38.8125 6.390625 42.859375 10.171875 \r\n",
       "Q 46.921875 13.96875 46.921875 20.515625 \r\n",
       "Q 46.921875 27.09375 42.890625 30.859375 \r\n",
       "Q 38.875 34.625 31.78125 34.625 \r\n",
       "z\r\n",
       "M 21.921875 38.8125 \r\n",
       "Q 15.578125 40.375 12.03125 44.71875 \r\n",
       "Q 8.5 49.078125 8.5 55.328125 \r\n",
       "Q 8.5 64.0625 14.71875 69.140625 \r\n",
       "Q 20.953125 74.21875 31.78125 74.21875 \r\n",
       "Q 42.671875 74.21875 48.875 69.140625 \r\n",
       "Q 55.078125 64.0625 55.078125 55.328125 \r\n",
       "Q 55.078125 49.078125 51.53125 44.71875 \r\n",
       "Q 48 40.375 41.703125 38.8125 \r\n",
       "Q 48.828125 37.15625 52.796875 32.3125 \r\n",
       "Q 56.78125 27.484375 56.78125 20.515625 \r\n",
       "Q 56.78125 9.90625 50.3125 4.234375 \r\n",
       "Q 43.84375 -1.421875 31.78125 -1.421875 \r\n",
       "Q 19.734375 -1.421875 13.25 4.234375 \r\n",
       "Q 6.78125 9.90625 6.78125 20.515625 \r\n",
       "Q 6.78125 27.484375 10.78125 32.3125 \r\n",
       "Q 14.796875 37.15625 21.921875 38.8125 \r\n",
       "z\r\n",
       "M 18.3125 54.390625 \r\n",
       "Q 18.3125 48.734375 21.84375 45.5625 \r\n",
       "Q 25.390625 42.390625 31.78125 42.390625 \r\n",
       "Q 38.140625 42.390625 41.71875 45.5625 \r\n",
       "Q 45.3125 48.734375 45.3125 54.390625 \r\n",
       "Q 45.3125 60.0625 41.71875 63.234375 \r\n",
       "Q 38.140625 66.40625 31.78125 66.40625 \r\n",
       "Q 25.390625 66.40625 21.84375 63.234375 \r\n",
       "Q 18.3125 60.0625 18.3125 54.390625 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-56\"/>\r\n",
       "        <path d=\"M 4.890625 31.390625 \r\n",
       "L 31.203125 31.390625 \r\n",
       "L 31.203125 23.390625 \r\n",
       "L 4.890625 23.390625 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-45\"/>\r\n",
       "        <path d=\"M 40.578125 39.3125 \r\n",
       "Q 47.65625 37.796875 51.625 33 \r\n",
       "Q 55.609375 28.21875 55.609375 21.1875 \r\n",
       "Q 55.609375 10.40625 48.1875 4.484375 \r\n",
       "Q 40.765625 -1.421875 27.09375 -1.421875 \r\n",
       "Q 22.515625 -1.421875 17.65625 -0.515625 \r\n",
       "Q 12.796875 0.390625 7.625 2.203125 \r\n",
       "L 7.625 11.71875 \r\n",
       "Q 11.71875 9.328125 16.59375 8.109375 \r\n",
       "Q 21.484375 6.890625 26.8125 6.890625 \r\n",
       "Q 36.078125 6.890625 40.9375 10.546875 \r\n",
       "Q 45.796875 14.203125 45.796875 21.1875 \r\n",
       "Q 45.796875 27.640625 41.28125 31.265625 \r\n",
       "Q 36.765625 34.90625 28.71875 34.90625 \r\n",
       "L 20.21875 34.90625 \r\n",
       "L 20.21875 43.015625 \r\n",
       "L 29.109375 43.015625 \r\n",
       "Q 36.375 43.015625 40.234375 45.921875 \r\n",
       "Q 44.09375 48.828125 44.09375 54.296875 \r\n",
       "Q 44.09375 59.90625 40.109375 62.90625 \r\n",
       "Q 36.140625 65.921875 28.71875 65.921875 \r\n",
       "Q 24.65625 65.921875 20.015625 65.03125 \r\n",
       "Q 15.375 64.15625 9.8125 62.3125 \r\n",
       "L 9.8125 71.09375 \r\n",
       "Q 15.4375 72.65625 20.34375 73.4375 \r\n",
       "Q 25.25 74.21875 29.59375 74.21875 \r\n",
       "Q 40.828125 74.21875 47.359375 69.109375 \r\n",
       "Q 53.90625 64.015625 53.90625 55.328125 \r\n",
       "Q 53.90625 49.265625 50.4375 45.09375 \r\n",
       "Q 46.96875 40.921875 40.578125 39.3125 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-51\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#DejaVuSans-50\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-49\"/>\r\n",
       "       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-56\"/>\r\n",
       "       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n",
       "       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-51\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_2\">\r\n",
       "     <g id=\"line2d_2\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"155.962345\" xlink:href=\"#m30af8aee82\" y=\"348.478125\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_2\">\r\n",
       "      <!-- 2018-05 -->\r\n",
       "      <g transform=\"translate(135.070939 363.076563)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 10.796875 72.90625 \r\n",
       "L 49.515625 72.90625 \r\n",
       "L 49.515625 64.59375 \r\n",
       "L 19.828125 64.59375 \r\n",
       "L 19.828125 46.734375 \r\n",
       "Q 21.96875 47.46875 24.109375 47.828125 \r\n",
       "Q 26.265625 48.1875 28.421875 48.1875 \r\n",
       "Q 40.625 48.1875 47.75 41.5 \r\n",
       "Q 54.890625 34.8125 54.890625 23.390625 \r\n",
       "Q 54.890625 11.625 47.5625 5.09375 \r\n",
       "Q 40.234375 -1.421875 26.90625 -1.421875 \r\n",
       "Q 22.3125 -1.421875 17.546875 -0.640625 \r\n",
       "Q 12.796875 0.140625 7.71875 1.703125 \r\n",
       "L 7.71875 11.625 \r\n",
       "Q 12.109375 9.234375 16.796875 8.0625 \r\n",
       "Q 21.484375 6.890625 26.703125 6.890625 \r\n",
       "Q 35.15625 6.890625 40.078125 11.328125 \r\n",
       "Q 45.015625 15.765625 45.015625 23.390625 \r\n",
       "Q 45.015625 31 40.078125 35.4375 \r\n",
       "Q 35.15625 39.890625 26.703125 39.890625 \r\n",
       "Q 22.75 39.890625 18.8125 39.015625 \r\n",
       "Q 14.890625 38.140625 10.796875 36.28125 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-53\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#DejaVuSans-50\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-49\"/>\r\n",
       "       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-56\"/>\r\n",
       "       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n",
       "       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-53\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_3\">\r\n",
       "     <g id=\"line2d_3\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"219.763657\" xlink:href=\"#m30af8aee82\" y=\"348.478125\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_3\">\r\n",
       "      <!-- 2018-07 -->\r\n",
       "      <g transform=\"translate(198.872251 363.076563)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 8.203125 72.90625 \r\n",
       "L 55.078125 72.90625 \r\n",
       "L 55.078125 68.703125 \r\n",
       "L 28.609375 0 \r\n",
       "L 18.3125 0 \r\n",
       "L 43.21875 64.59375 \r\n",
       "L 8.203125 64.59375 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-55\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#DejaVuSans-50\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-49\"/>\r\n",
       "       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-56\"/>\r\n",
       "       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n",
       "       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-55\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_4\">\r\n",
       "     <g id=\"line2d_4\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"284.610892\" xlink:href=\"#m30af8aee82\" y=\"348.478125\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_4\">\r\n",
       "      <!-- 2018-09 -->\r\n",
       "      <g transform=\"translate(263.719486 363.076563)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 10.984375 1.515625 \r\n",
       "L 10.984375 10.5 \r\n",
       "Q 14.703125 8.734375 18.5 7.8125 \r\n",
       "Q 22.3125 6.890625 25.984375 6.890625 \r\n",
       "Q 35.75 6.890625 40.890625 13.453125 \r\n",
       "Q 46.046875 20.015625 46.78125 33.40625 \r\n",
       "Q 43.953125 29.203125 39.59375 26.953125 \r\n",
       "Q 35.25 24.703125 29.984375 24.703125 \r\n",
       "Q 19.046875 24.703125 12.671875 31.3125 \r\n",
       "Q 6.296875 37.9375 6.296875 49.421875 \r\n",
       "Q 6.296875 60.640625 12.9375 67.421875 \r\n",
       "Q 19.578125 74.21875 30.609375 74.21875 \r\n",
       "Q 43.265625 74.21875 49.921875 64.515625 \r\n",
       "Q 56.59375 54.828125 56.59375 36.375 \r\n",
       "Q 56.59375 19.140625 48.40625 8.859375 \r\n",
       "Q 40.234375 -1.421875 26.421875 -1.421875 \r\n",
       "Q 22.703125 -1.421875 18.890625 -0.6875 \r\n",
       "Q 15.09375 0.046875 10.984375 1.515625 \r\n",
       "z\r\n",
       "M 30.609375 32.421875 \r\n",
       "Q 37.25 32.421875 41.125 36.953125 \r\n",
       "Q 45.015625 41.5 45.015625 49.421875 \r\n",
       "Q 45.015625 57.28125 41.125 61.84375 \r\n",
       "Q 37.25 66.40625 30.609375 66.40625 \r\n",
       "Q 23.96875 66.40625 20.09375 61.84375 \r\n",
       "Q 16.21875 57.28125 16.21875 49.421875 \r\n",
       "Q 16.21875 41.5 20.09375 36.953125 \r\n",
       "Q 23.96875 32.421875 30.609375 32.421875 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-57\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#DejaVuSans-50\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-49\"/>\r\n",
       "       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-56\"/>\r\n",
       "       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n",
       "       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-57\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_5\">\r\n",
       "     <g id=\"line2d_5\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"348.412204\" xlink:href=\"#m30af8aee82\" y=\"348.478125\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_5\">\r\n",
       "      <!-- 2018-11 -->\r\n",
       "      <g transform=\"translate(327.520798 363.076563)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#DejaVuSans-50\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-49\"/>\r\n",
       "       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-56\"/>\r\n",
       "       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n",
       "       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-49\"/>\r\n",
       "       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-49\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_6\">\r\n",
       "     <g id=\"line2d_6\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"412.213516\" xlink:href=\"#m30af8aee82\" y=\"348.478125\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_6\">\r\n",
       "      <!-- 2019-01 -->\r\n",
       "      <g transform=\"translate(391.32211 363.076563)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#DejaVuSans-50\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-49\"/>\r\n",
       "       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-57\"/>\r\n",
       "       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n",
       "       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-49\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_7\">\r\n",
       "     <g id=\"line2d_7\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"473.922982\" xlink:href=\"#m30af8aee82\" y=\"348.478125\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_7\">\r\n",
       "      <!-- 2019-03 -->\r\n",
       "      <g transform=\"translate(453.031576 363.076563)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#DejaVuSans-50\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-49\"/>\r\n",
       "       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-57\"/>\r\n",
       "       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n",
       "       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-51\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"xtick_8\">\r\n",
       "     <g id=\"line2d_8\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"537.724294\" xlink:href=\"#m30af8aee82\" y=\"348.478125\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_8\">\r\n",
       "      <!-- 2019-05 -->\r\n",
       "      <g transform=\"translate(516.832888 363.076563)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#DejaVuSans-50\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-49\"/>\r\n",
       "       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-57\"/>\r\n",
       "       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n",
       "       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-53\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"matplotlib.axis_2\">\r\n",
       "    <g id=\"ytick_1\">\r\n",
       "     <g id=\"line2d_9\">\r\n",
       "      <defs>\r\n",
       "       <path d=\"M 0 0 \r\n",
       "L -3.5 0 \r\n",
       "\" id=\"m98d479e96f\" style=\"stroke:#000000;stroke-width:0.8;\"/>\r\n",
       "      </defs>\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#m98d479e96f\" y=\"312.886316\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_9\">\r\n",
       "      <!-- 3.75 -->\r\n",
       "      <g transform=\"translate(7.2 316.685534)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 10.6875 12.40625 \r\n",
       "L 21 12.40625 \r\n",
       "L 21 0 \r\n",
       "L 10.6875 0 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-46\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#DejaVuSans-51\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-46\"/>\r\n",
       "       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-55\"/>\r\n",
       "       <use x=\"159.033203\" xlink:href=\"#DejaVuSans-53\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_2\">\r\n",
       "     <g id=\"line2d_10\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#m98d479e96f\" y=\"271.787608\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_10\">\r\n",
       "      <!-- 4.00 -->\r\n",
       "      <g transform=\"translate(7.2 275.586827)scale(0.1 -0.1)\">\r\n",
       "       <defs>\r\n",
       "        <path d=\"M 37.796875 64.3125 \r\n",
       "L 12.890625 25.390625 \r\n",
       "L 37.796875 25.390625 \r\n",
       "z\r\n",
       "M 35.203125 72.90625 \r\n",
       "L 47.609375 72.90625 \r\n",
       "L 47.609375 25.390625 \r\n",
       "L 58.015625 25.390625 \r\n",
       "L 58.015625 17.1875 \r\n",
       "L 47.609375 17.1875 \r\n",
       "L 47.609375 0 \r\n",
       "L 37.796875 0 \r\n",
       "L 37.796875 17.1875 \r\n",
       "L 4.890625 17.1875 \r\n",
       "L 4.890625 26.703125 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-52\"/>\r\n",
       "       </defs>\r\n",
       "       <use xlink:href=\"#DejaVuSans-52\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-46\"/>\r\n",
       "       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"159.033203\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_3\">\r\n",
       "     <g id=\"line2d_11\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#m98d479e96f\" y=\"230.688901\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_11\">\r\n",
       "      <!-- 4.25 -->\r\n",
       "      <g transform=\"translate(7.2 234.488119)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#DejaVuSans-52\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-46\"/>\r\n",
       "       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-50\"/>\r\n",
       "       <use x=\"159.033203\" xlink:href=\"#DejaVuSans-53\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_4\">\r\n",
       "     <g id=\"line2d_12\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#m98d479e96f\" y=\"189.590193\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_12\">\r\n",
       "      <!-- 4.50 -->\r\n",
       "      <g transform=\"translate(7.2 193.389412)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#DejaVuSans-52\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-46\"/>\r\n",
       "       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-53\"/>\r\n",
       "       <use x=\"159.033203\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_5\">\r\n",
       "     <g id=\"line2d_13\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#m98d479e96f\" y=\"148.491486\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_13\">\r\n",
       "      <!-- 4.75 -->\r\n",
       "      <g transform=\"translate(7.2 152.290704)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#DejaVuSans-52\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-46\"/>\r\n",
       "       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-55\"/>\r\n",
       "       <use x=\"159.033203\" xlink:href=\"#DejaVuSans-53\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_6\">\r\n",
       "     <g id=\"line2d_14\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#m98d479e96f\" y=\"107.392778\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_14\">\r\n",
       "      <!-- 5.00 -->\r\n",
       "      <g transform=\"translate(7.2 111.191997)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#DejaVuSans-53\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-46\"/>\r\n",
       "       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "       <use x=\"159.033203\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_7\">\r\n",
       "     <g id=\"line2d_15\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#m98d479e96f\" y=\"66.294071\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_15\">\r\n",
       "      <!-- 5.25 -->\r\n",
       "      <g transform=\"translate(7.2 70.09329)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#DejaVuSans-53\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-46\"/>\r\n",
       "       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-50\"/>\r\n",
       "       <use x=\"159.033203\" xlink:href=\"#DejaVuSans-53\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"ytick_8\">\r\n",
       "     <g id=\"line2d_16\">\r\n",
       "      <g>\r\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#m98d479e96f\" y=\"25.195363\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "     <g id=\"text_16\">\r\n",
       "      <!-- 5.50 -->\r\n",
       "      <g transform=\"translate(7.2 28.994582)scale(0.1 -0.1)\">\r\n",
       "       <use xlink:href=\"#DejaVuSans-53\"/>\r\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-46\"/>\r\n",
       "       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-53\"/>\r\n",
       "       <use x=\"159.033203\" xlink:href=\"#DejaVuSans-48\"/>\r\n",
       "      </g>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "    <g id=\"text_17\">\r\n",
       "     <!-- 1e6 -->\r\n",
       "     <g transform=\"translate(36.465625 19.318125)scale(0.1 -0.1)\">\r\n",
       "      <defs>\r\n",
       "       <path d=\"M 56.203125 29.59375 \r\n",
       "L 56.203125 25.203125 \r\n",
       "L 14.890625 25.203125 \r\n",
       "Q 15.484375 15.921875 20.484375 11.0625 \r\n",
       "Q 25.484375 6.203125 34.421875 6.203125 \r\n",
       "Q 39.59375 6.203125 44.453125 7.46875 \r\n",
       "Q 49.3125 8.734375 54.109375 11.28125 \r\n",
       "L 54.109375 2.78125 \r\n",
       "Q 49.265625 0.734375 44.1875 -0.34375 \r\n",
       "Q 39.109375 -1.421875 33.890625 -1.421875 \r\n",
       "Q 20.796875 -1.421875 13.15625 6.1875 \r\n",
       "Q 5.515625 13.8125 5.515625 26.8125 \r\n",
       "Q 5.515625 40.234375 12.765625 48.109375 \r\n",
       "Q 20.015625 56 32.328125 56 \r\n",
       "Q 43.359375 56 49.78125 48.890625 \r\n",
       "Q 56.203125 41.796875 56.203125 29.59375 \r\n",
       "z\r\n",
       "M 47.21875 32.234375 \r\n",
       "Q 47.125 39.59375 43.09375 43.984375 \r\n",
       "Q 39.0625 48.390625 32.421875 48.390625 \r\n",
       "Q 24.90625 48.390625 20.390625 44.140625 \r\n",
       "Q 15.875 39.890625 15.1875 32.171875 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-101\"/>\r\n",
       "       <path d=\"M 33.015625 40.375 \r\n",
       "Q 26.375 40.375 22.484375 35.828125 \r\n",
       "Q 18.609375 31.296875 18.609375 23.390625 \r\n",
       "Q 18.609375 15.53125 22.484375 10.953125 \r\n",
       "Q 26.375 6.390625 33.015625 6.390625 \r\n",
       "Q 39.65625 6.390625 43.53125 10.953125 \r\n",
       "Q 47.40625 15.53125 47.40625 23.390625 \r\n",
       "Q 47.40625 31.296875 43.53125 35.828125 \r\n",
       "Q 39.65625 40.375 33.015625 40.375 \r\n",
       "z\r\n",
       "M 52.59375 71.296875 \r\n",
       "L 52.59375 62.3125 \r\n",
       "Q 48.875 64.0625 45.09375 64.984375 \r\n",
       "Q 41.3125 65.921875 37.59375 65.921875 \r\n",
       "Q 27.828125 65.921875 22.671875 59.328125 \r\n",
       "Q 17.53125 52.734375 16.796875 39.40625 \r\n",
       "Q 19.671875 43.65625 24.015625 45.921875 \r\n",
       "Q 28.375 48.1875 33.59375 48.1875 \r\n",
       "Q 44.578125 48.1875 50.953125 41.515625 \r\n",
       "Q 57.328125 34.859375 57.328125 23.390625 \r\n",
       "Q 57.328125 12.15625 50.6875 5.359375 \r\n",
       "Q 44.046875 -1.421875 33.015625 -1.421875 \r\n",
       "Q 20.359375 -1.421875 13.671875 8.265625 \r\n",
       "Q 6.984375 17.96875 6.984375 36.375 \r\n",
       "Q 6.984375 53.65625 15.1875 63.9375 \r\n",
       "Q 23.390625 74.21875 37.203125 74.21875 \r\n",
       "Q 40.921875 74.21875 44.703125 73.484375 \r\n",
       "Q 48.484375 72.75 52.59375 71.296875 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-54\"/>\r\n",
       "      </defs>\r\n",
       "      <use xlink:href=\"#DejaVuSans-49\"/>\r\n",
       "      <use x=\"63.623047\" xlink:href=\"#DejaVuSans-101\"/>\r\n",
       "      <use x=\"125.146484\" xlink:href=\"#DejaVuSans-54\"/>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"line2d_17\">\r\n",
       "    <path clip-path=\"url(#p7ee5f586bb)\" d=\"M 61.829261 333.65267 \r\n",
       "L 91.11511 317.926661 \r\n",
       "L 123.538727 301.42964 \r\n",
       "L 154.916422 286.992486 \r\n",
       "L 187.340039 283.328125 \r\n",
       "L 218.717734 264.452311 \r\n",
       "L 251.141351 231.788702 \r\n",
       "L 283.564969 213.435663 \r\n",
       "L 314.942663 175.304282 \r\n",
       "L 347.366281 133.298116 \r\n",
       "L 378.743976 111.652248 \r\n",
       "L 411.167593 89.151528 \r\n",
       "L 443.591211 105.888566 \r\n",
       "L 472.877059 75.564295 \r\n",
       "L 505.300677 60.382433 \r\n",
       "L 536.678371 51.924319 \r\n",
       "L 569.101989 37.14358 \r\n",
       "\" style=\"fill:none;stroke:#0000ff;stroke-linecap:square;stroke-width:1.5;\"/>\r\n",
       "   </g>\r\n",
       "   <g id=\"patch_3\">\r\n",
       "    <path d=\"M 36.465625 348.478125 \r\n",
       "L 36.465625 22.318125 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n",
       "   </g>\r\n",
       "   <g id=\"patch_4\">\r\n",
       "    <path d=\"M 594.465625 348.478125 \r\n",
       "L 594.465625 22.318125 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n",
       "   </g>\r\n",
       "   <g id=\"patch_5\">\r\n",
       "    <path d=\"M 36.465625 348.478125 \r\n",
       "L 594.465625 348.478125 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n",
       "   </g>\r\n",
       "   <g id=\"patch_6\">\r\n",
       "    <path d=\"M 36.465625 22.318125 \r\n",
       "L 594.465625 22.318125 \r\n",
       "\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n",
       "   </g>\r\n",
       "   <g id=\"text_18\">\r\n",
       "    <!-- Monthly sales -->\r\n",
       "    <g transform=\"translate(274.248437 16.318125)scale(0.12 -0.12)\">\r\n",
       "     <defs>\r\n",
       "      <path d=\"M 9.8125 72.90625 \r\n",
       "L 24.515625 72.90625 \r\n",
       "L 43.109375 23.296875 \r\n",
       "L 61.8125 72.90625 \r\n",
       "L 76.515625 72.90625 \r\n",
       "L 76.515625 0 \r\n",
       "L 66.890625 0 \r\n",
       "L 66.890625 64.015625 \r\n",
       "L 48.09375 14.015625 \r\n",
       "L 38.1875 14.015625 \r\n",
       "L 19.390625 64.015625 \r\n",
       "L 19.390625 0 \r\n",
       "L 9.8125 0 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-77\"/>\r\n",
       "      <path d=\"M 30.609375 48.390625 \r\n",
       "Q 23.390625 48.390625 19.1875 42.75 \r\n",
       "Q 14.984375 37.109375 14.984375 27.296875 \r\n",
       "Q 14.984375 17.484375 19.15625 11.84375 \r\n",
       "Q 23.34375 6.203125 30.609375 6.203125 \r\n",
       "Q 37.796875 6.203125 41.984375 11.859375 \r\n",
       "Q 46.1875 17.53125 46.1875 27.296875 \r\n",
       "Q 46.1875 37.015625 41.984375 42.703125 \r\n",
       "Q 37.796875 48.390625 30.609375 48.390625 \r\n",
       "z\r\n",
       "M 30.609375 56 \r\n",
       "Q 42.328125 56 49.015625 48.375 \r\n",
       "Q 55.71875 40.765625 55.71875 27.296875 \r\n",
       "Q 55.71875 13.875 49.015625 6.21875 \r\n",
       "Q 42.328125 -1.421875 30.609375 -1.421875 \r\n",
       "Q 18.84375 -1.421875 12.171875 6.21875 \r\n",
       "Q 5.515625 13.875 5.515625 27.296875 \r\n",
       "Q 5.515625 40.765625 12.171875 48.375 \r\n",
       "Q 18.84375 56 30.609375 56 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-111\"/>\r\n",
       "      <path d=\"M 54.890625 33.015625 \r\n",
       "L 54.890625 0 \r\n",
       "L 45.90625 0 \r\n",
       "L 45.90625 32.71875 \r\n",
       "Q 45.90625 40.484375 42.875 44.328125 \r\n",
       "Q 39.84375 48.1875 33.796875 48.1875 \r\n",
       "Q 26.515625 48.1875 22.3125 43.546875 \r\n",
       "Q 18.109375 38.921875 18.109375 30.90625 \r\n",
       "L 18.109375 0 \r\n",
       "L 9.078125 0 \r\n",
       "L 9.078125 54.6875 \r\n",
       "L 18.109375 54.6875 \r\n",
       "L 18.109375 46.1875 \r\n",
       "Q 21.34375 51.125 25.703125 53.5625 \r\n",
       "Q 30.078125 56 35.796875 56 \r\n",
       "Q 45.21875 56 50.046875 50.171875 \r\n",
       "Q 54.890625 44.34375 54.890625 33.015625 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-110\"/>\r\n",
       "      <path d=\"M 18.3125 70.21875 \r\n",
       "L 18.3125 54.6875 \r\n",
       "L 36.8125 54.6875 \r\n",
       "L 36.8125 47.703125 \r\n",
       "L 18.3125 47.703125 \r\n",
       "L 18.3125 18.015625 \r\n",
       "Q 18.3125 11.328125 20.140625 9.421875 \r\n",
       "Q 21.96875 7.515625 27.59375 7.515625 \r\n",
       "L 36.8125 7.515625 \r\n",
       "L 36.8125 0 \r\n",
       "L 27.59375 0 \r\n",
       "Q 17.1875 0 13.234375 3.875 \r\n",
       "Q 9.28125 7.765625 9.28125 18.015625 \r\n",
       "L 9.28125 47.703125 \r\n",
       "L 2.6875 47.703125 \r\n",
       "L 2.6875 54.6875 \r\n",
       "L 9.28125 54.6875 \r\n",
       "L 9.28125 70.21875 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-116\"/>\r\n",
       "      <path d=\"M 54.890625 33.015625 \r\n",
       "L 54.890625 0 \r\n",
       "L 45.90625 0 \r\n",
       "L 45.90625 32.71875 \r\n",
       "Q 45.90625 40.484375 42.875 44.328125 \r\n",
       "Q 39.84375 48.1875 33.796875 48.1875 \r\n",
       "Q 26.515625 48.1875 22.3125 43.546875 \r\n",
       "Q 18.109375 38.921875 18.109375 30.90625 \r\n",
       "L 18.109375 0 \r\n",
       "L 9.078125 0 \r\n",
       "L 9.078125 75.984375 \r\n",
       "L 18.109375 75.984375 \r\n",
       "L 18.109375 46.1875 \r\n",
       "Q 21.34375 51.125 25.703125 53.5625 \r\n",
       "Q 30.078125 56 35.796875 56 \r\n",
       "Q 45.21875 56 50.046875 50.171875 \r\n",
       "Q 54.890625 44.34375 54.890625 33.015625 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-104\"/>\r\n",
       "      <path d=\"M 9.421875 75.984375 \r\n",
       "L 18.40625 75.984375 \r\n",
       "L 18.40625 0 \r\n",
       "L 9.421875 0 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-108\"/>\r\n",
       "      <path d=\"M 32.171875 -5.078125 \r\n",
       "Q 28.375 -14.84375 24.75 -17.8125 \r\n",
       "Q 21.140625 -20.796875 15.09375 -20.796875 \r\n",
       "L 7.90625 -20.796875 \r\n",
       "L 7.90625 -13.28125 \r\n",
       "L 13.1875 -13.28125 \r\n",
       "Q 16.890625 -13.28125 18.9375 -11.515625 \r\n",
       "Q 21 -9.765625 23.484375 -3.21875 \r\n",
       "L 25.09375 0.875 \r\n",
       "L 2.984375 54.6875 \r\n",
       "L 12.5 54.6875 \r\n",
       "L 29.59375 11.921875 \r\n",
       "L 46.6875 54.6875 \r\n",
       "L 56.203125 54.6875 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-121\"/>\r\n",
       "      <path id=\"DejaVuSans-32\"/>\r\n",
       "      <path d=\"M 44.28125 53.078125 \r\n",
       "L 44.28125 44.578125 \r\n",
       "Q 40.484375 46.53125 36.375 47.5 \r\n",
       "Q 32.28125 48.484375 27.875 48.484375 \r\n",
       "Q 21.1875 48.484375 17.84375 46.4375 \r\n",
       "Q 14.5 44.390625 14.5 40.28125 \r\n",
       "Q 14.5 37.15625 16.890625 35.375 \r\n",
       "Q 19.28125 33.59375 26.515625 31.984375 \r\n",
       "L 29.59375 31.296875 \r\n",
       "Q 39.15625 29.25 43.1875 25.515625 \r\n",
       "Q 47.21875 21.78125 47.21875 15.09375 \r\n",
       "Q 47.21875 7.46875 41.1875 3.015625 \r\n",
       "Q 35.15625 -1.421875 24.609375 -1.421875 \r\n",
       "Q 20.21875 -1.421875 15.453125 -0.5625 \r\n",
       "Q 10.6875 0.296875 5.421875 2 \r\n",
       "L 5.421875 11.28125 \r\n",
       "Q 10.40625 8.6875 15.234375 7.390625 \r\n",
       "Q 20.0625 6.109375 24.8125 6.109375 \r\n",
       "Q 31.15625 6.109375 34.5625 8.28125 \r\n",
       "Q 37.984375 10.453125 37.984375 14.40625 \r\n",
       "Q 37.984375 18.0625 35.515625 20.015625 \r\n",
       "Q 33.0625 21.96875 24.703125 23.78125 \r\n",
       "L 21.578125 24.515625 \r\n",
       "Q 13.234375 26.265625 9.515625 29.90625 \r\n",
       "Q 5.8125 33.546875 5.8125 39.890625 \r\n",
       "Q 5.8125 47.609375 11.28125 51.796875 \r\n",
       "Q 16.75 56 26.8125 56 \r\n",
       "Q 31.78125 56 36.171875 55.265625 \r\n",
       "Q 40.578125 54.546875 44.28125 53.078125 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-115\"/>\r\n",
       "      <path d=\"M 34.28125 27.484375 \r\n",
       "Q 23.390625 27.484375 19.1875 25 \r\n",
       "Q 14.984375 22.515625 14.984375 16.5 \r\n",
       "Q 14.984375 11.71875 18.140625 8.90625 \r\n",
       "Q 21.296875 6.109375 26.703125 6.109375 \r\n",
       "Q 34.1875 6.109375 38.703125 11.40625 \r\n",
       "Q 43.21875 16.703125 43.21875 25.484375 \r\n",
       "L 43.21875 27.484375 \r\n",
       "z\r\n",
       "M 52.203125 31.203125 \r\n",
       "L 52.203125 0 \r\n",
       "L 43.21875 0 \r\n",
       "L 43.21875 8.296875 \r\n",
       "Q 40.140625 3.328125 35.546875 0.953125 \r\n",
       "Q 30.953125 -1.421875 24.3125 -1.421875 \r\n",
       "Q 15.921875 -1.421875 10.953125 3.296875 \r\n",
       "Q 6 8.015625 6 15.921875 \r\n",
       "Q 6 25.140625 12.171875 29.828125 \r\n",
       "Q 18.359375 34.515625 30.609375 34.515625 \r\n",
       "L 43.21875 34.515625 \r\n",
       "L 43.21875 35.40625 \r\n",
       "Q 43.21875 41.609375 39.140625 45 \r\n",
       "Q 35.0625 48.390625 27.6875 48.390625 \r\n",
       "Q 23 48.390625 18.546875 47.265625 \r\n",
       "Q 14.109375 46.140625 10.015625 43.890625 \r\n",
       "L 10.015625 52.203125 \r\n",
       "Q 14.9375 54.109375 19.578125 55.046875 \r\n",
       "Q 24.21875 56 28.609375 56 \r\n",
       "Q 40.484375 56 46.34375 49.84375 \r\n",
       "Q 52.203125 43.703125 52.203125 31.203125 \r\n",
       "z\r\n",
       "\" id=\"DejaVuSans-97\"/>\r\n",
       "     </defs>\r\n",
       "     <use xlink:href=\"#DejaVuSans-77\"/>\r\n",
       "     <use x=\"86.279297\" xlink:href=\"#DejaVuSans-111\"/>\r\n",
       "     <use x=\"147.460938\" xlink:href=\"#DejaVuSans-110\"/>\r\n",
       "     <use x=\"210.839844\" xlink:href=\"#DejaVuSans-116\"/>\r\n",
       "     <use x=\"250.048828\" xlink:href=\"#DejaVuSans-104\"/>\r\n",
       "     <use x=\"313.427734\" xlink:href=\"#DejaVuSans-108\"/>\r\n",
       "     <use x=\"341.210938\" xlink:href=\"#DejaVuSans-121\"/>\r\n",
       "     <use x=\"400.390625\" xlink:href=\"#DejaVuSans-32\"/>\r\n",
       "     <use x=\"432.177734\" xlink:href=\"#DejaVuSans-115\"/>\r\n",
       "     <use x=\"484.277344\" xlink:href=\"#DejaVuSans-97\"/>\r\n",
       "     <use x=\"545.556641\" xlink:href=\"#DejaVuSans-108\"/>\r\n",
       "     <use x=\"573.339844\" xlink:href=\"#DejaVuSans-101\"/>\r\n",
       "     <use x=\"634.863281\" xlink:href=\"#DejaVuSans-115\"/>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "   <g id=\"legend_1\">\r\n",
       "    <g id=\"patch_7\">\r\n",
       "     <path d=\"M 43.465625 44.99625 \r\n",
       "L 144.160937 44.99625 \r\n",
       "Q 146.160937 44.99625 146.160937 42.99625 \r\n",
       "L 146.160937 29.318125 \r\n",
       "Q 146.160937 27.318125 144.160937 27.318125 \r\n",
       "L 43.465625 27.318125 \r\n",
       "Q 41.465625 27.318125 41.465625 29.318125 \r\n",
       "L 41.465625 42.99625 \r\n",
       "Q 41.465625 44.99625 43.465625 44.99625 \r\n",
       "z\r\n",
       "\" style=\"fill:#ffffff;opacity:0.8;stroke:#cccccc;stroke-linejoin:miter;\"/>\r\n",
       "    </g>\r\n",
       "    <g id=\"line2d_18\">\r\n",
       "     <path d=\"M 45.465625 35.416563 \r\n",
       "L 65.465625 35.416563 \r\n",
       "\" style=\"fill:none;stroke:#0000ff;stroke-linecap:square;stroke-width:1.5;\"/>\r\n",
       "    </g>\r\n",
       "    <g id=\"line2d_19\"/>\r\n",
       "    <g id=\"text_19\">\r\n",
       "     <!-- Monthly sales -->\r\n",
       "     <g transform=\"translate(73.465625 38.916563)scale(0.1 -0.1)\">\r\n",
       "      <use xlink:href=\"#DejaVuSans-77\"/>\r\n",
       "      <use x=\"86.279297\" xlink:href=\"#DejaVuSans-111\"/>\r\n",
       "      <use x=\"147.460938\" xlink:href=\"#DejaVuSans-110\"/>\r\n",
       "      <use x=\"210.839844\" xlink:href=\"#DejaVuSans-116\"/>\r\n",
       "      <use x=\"250.048828\" xlink:href=\"#DejaVuSans-104\"/>\r\n",
       "      <use x=\"313.427734\" xlink:href=\"#DejaVuSans-108\"/>\r\n",
       "      <use x=\"341.210938\" xlink:href=\"#DejaVuSans-121\"/>\r\n",
       "      <use x=\"400.390625\" xlink:href=\"#DejaVuSans-32\"/>\r\n",
       "      <use x=\"432.177734\" xlink:href=\"#DejaVuSans-115\"/>\r\n",
       "      <use x=\"484.277344\" xlink:href=\"#DejaVuSans-97\"/>\r\n",
       "      <use x=\"545.556641\" xlink:href=\"#DejaVuSans-108\"/>\r\n",
       "      <use x=\"573.339844\" xlink:href=\"#DejaVuSans-101\"/>\r\n",
       "      <use x=\"634.863281\" xlink:href=\"#DejaVuSans-115\"/>\r\n",
       "     </g>\r\n",
       "    </g>\r\n",
       "   </g>\r\n",
       "  </g>\r\n",
       " </g>\r\n",
       " <defs>\r\n",
       "  <clipPath id=\"p7ee5f586bb\">\r\n",
       "   <rect height=\"326.16\" width=\"558\" x=\"36.465625\" y=\"22.318125\"/>\r\n",
       "  </clipPath>\r\n",
       " </defs>\r\n",
       "</svg>\r\n"
      ],
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "plt.figure(figsize = (10, 6))\n",
    "plt.plot(x, color = \"blue\", label = \"Monthly sales\")\n",
    "plt.title(\"Monthly sales\")\n",
    "plt.legend();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    0.0\n",
       "1    0.0\n",
       "2    0.0\n",
       "3    0.0\n",
       "4    0.0\n",
       "Name: Ingresos, dtype: float64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "full_2['Ingresos'].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(89443860, 23)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "full_2.shape\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "full_2_subset = full_2.head(1000000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.to_pickle(full_2_subset, './full_2_subset.pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = full_2_subset[[\"date\", \"Ingresos\"]].set_index(\"date\").resample(\"W\").sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (10, 6))\n",
    "plt.plot(x, color = \"blue\", label = \"Weekly sales\")\n",
    "plt.title(\"Weekly sales\")\n",
    "plt.legend();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id_cliente</th>\n",
       "      <th>pk_cid_x</th>\n",
       "      <th>pk_partition_x</th>\n",
       "      <th>Productos</th>\n",
       "      <th>Ventas_cant</th>\n",
       "      <th>Precios</th>\n",
       "      <th>Familia_prod</th>\n",
       "      <th>Ingresos</th>\n",
       "      <th>pk_cid_y</th>\n",
       "      <th>pk_partition_y</th>\n",
       "      <th>...</th>\n",
       "      <th>días_encartera</th>\n",
       "      <th>pk_cid</th>\n",
       "      <th>pk_partition</th>\n",
       "      <th>country_id</th>\n",
       "      <th>region_code</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>deceased</th>\n",
       "      <th>date</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10000282018-01-28</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-01-28</td>\n",
       "      <td>short_term_deposit</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40</td>\n",
       "      <td>Inversión</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-01-28</td>\n",
       "      <td>...</td>\n",
       "      <td>390.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-01-28</td>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>H</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>2018-01-28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10000282018-02-28</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-02-28</td>\n",
       "      <td>short_term_deposit</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40</td>\n",
       "      <td>Inversión</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-02-28</td>\n",
       "      <td>...</td>\n",
       "      <td>421.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-02-28</td>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>H</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>2018-02-28</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10000282018-03-28</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-03-28</td>\n",
       "      <td>short_term_deposit</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40</td>\n",
       "      <td>Inversión</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-03-28</td>\n",
       "      <td>...</td>\n",
       "      <td>449.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-03-28</td>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>H</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>2018-03-28</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10000282018-04-28</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-04-28</td>\n",
       "      <td>short_term_deposit</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40</td>\n",
       "      <td>Inversión</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-04-28</td>\n",
       "      <td>...</td>\n",
       "      <td>480.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-04-28</td>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>H</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>2018-04-28</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10000282018-05-28</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-05-28</td>\n",
       "      <td>short_term_deposit</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40</td>\n",
       "      <td>Inversión</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-05-28</td>\n",
       "      <td>...</td>\n",
       "      <td>510.0</td>\n",
       "      <td>1000028</td>\n",
       "      <td>2018-05-28</td>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>H</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>2018-05-28</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id_cliente pk_cid_x pk_partition_x           Productos  Ventas_cant  \\\n",
       "0  10000282018-01-28  1000028     2018-01-28  short_term_deposit          0.0   \n",
       "1  10000282018-02-28  1000028     2018-02-28  short_term_deposit          0.0   \n",
       "2  10000282018-03-28  1000028     2018-03-28  short_term_deposit          0.0   \n",
       "3  10000282018-04-28  1000028     2018-04-28  short_term_deposit          0.0   \n",
       "4  10000282018-05-28  1000028     2018-05-28  short_term_deposit          0.0   \n",
       "\n",
       "   Precios Familia_prod  Ingresos pk_cid_y pk_partition_y  ... días_encartera  \\\n",
       "0       40    Inversión       0.0  1000028     2018-01-28  ...          390.0   \n",
       "1       40    Inversión       0.0  1000028     2018-02-28  ...          421.0   \n",
       "2       40    Inversión       0.0  1000028     2018-03-28  ...          449.0   \n",
       "3       40    Inversión       0.0  1000028     2018-04-28  ...          480.0   \n",
       "4       40    Inversión       0.0  1000028     2018-05-28  ...          510.0   \n",
       "\n",
       "    pk_cid pk_partition  country_id region_code gender age  deceased  \\\n",
       "0  1000028   2018-01-28          ES        28.0      H  43         N   \n",
       "1  1000028   2018-02-28          ES        28.0      H  43         N   \n",
       "2  1000028   2018-03-28          ES        28.0      H  43         N   \n",
       "3  1000028   2018-04-28          ES        28.0      H  43         N   \n",
       "4  1000028   2018-05-28          ES        28.0      H  43         N   \n",
       "\n",
       "        date  Month  \n",
       "0 2018-01-28      1  \n",
       "1 2018-02-28      2  \n",
       "2 2018-03-28      3  \n",
       "3 2018-04-28      4  \n",
       "4 2018-05-28      5  \n",
       "\n",
       "[5 rows x 23 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "full_2_subset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country_id</th>\n",
       "      <th>region_code</th>\n",
       "      <th>clients_per_region</th>\n",
       "      <th>cumsum_by_region</th>\n",
       "      <th>pct_region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ES</td>\n",
       "      <td>28.0</td>\n",
       "      <td>163688</td>\n",
       "      <td>0.163688</td>\n",
       "      <td>0.011111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ES</td>\n",
       "      <td>8.0</td>\n",
       "      <td>128403</td>\n",
       "      <td>0.292091</td>\n",
       "      <td>0.022222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ES</td>\n",
       "      <td>15.0</td>\n",
       "      <td>51806</td>\n",
       "      <td>0.343897</td>\n",
       "      <td>0.033333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ES</td>\n",
       "      <td>41.0</td>\n",
       "      <td>47629</td>\n",
       "      <td>0.391526</td>\n",
       "      <td>0.044444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ES</td>\n",
       "      <td>36.0</td>\n",
       "      <td>40019</td>\n",
       "      <td>0.431545</td>\n",
       "      <td>0.055556</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  country_id  region_code  clients_per_region  cumsum_by_region  pct_region\n",
       "0         ES         28.0              163688          0.163688    0.011111\n",
       "1         ES          8.0              128403          0.292091    0.022222\n",
       "2         ES         15.0               51806          0.343897    0.033333\n",
       "3         ES         41.0               47629          0.391526    0.044444\n",
       "4         ES         36.0               40019          0.431545    0.055556"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# DESCOMPOSICIÓN 1NO EJECUTAR AÚN - \n",
    "# create a groupby DataFrame by  prod -----> VAMOS A LLEGAR AL CONSUMO POR prod. \n",
    "\n",
    "region_pivot_ = full_2_subset.groupby([\"country_id\", \"region_code\"]).size()\\\n",
    ".sort_values(ascending = False).to_frame().reset_index().rename(columns = {0: \"clients_per_region\"})\n",
    "\n",
    "region_pivot_[\"cumsum_by_region\"] = (region_pivot_[\"clients_per_region\"]/region_pivot_[\"clients_per_region\"].sum()).cumsum()\n",
    "\n",
    "region_pivot_[\"pct_region\"] = (1/region_pivot_.shape[0])\n",
    "region_pivot_[\"pct_region\"] = region_pivot_[\"pct_region\"].cumsum()\n",
    "region_pivot_.head()\n",
    "# Lo ejecuto en varios pasos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Plotting part\n",
    "\n",
    "# instanciate the figure\n",
    "fig = plt.figure(figsize = (10, 15))\n",
    "ax1, ax2, ax3 = fig.subplots(nrows = 3, ncols = 1)\n",
    "\n",
    "# get the data\n",
    "# concate a zero before the list, so that all curves start at origin\n",
    "x1_values = [0] + list(region_pivot_.index)\n",
    "y1_values = [0] + list(region_pivot_[\"cumsum_by_city\"])\n",
    "\n",
    "x2_values = [0] + list(state_pivot_[\"cumsum_by_state\"])\n",
    "y2_values = [0] + list(state_pivot_[\"cumsum_by_state\"])\n",
    "\n",
    "x3_values_city = [0] + list(region_pivot_[\"pct_cities\"])\n",
    "y3_values_city = [0] + list(region_pivot_[\"cumsum_by_city\"])\n",
    "\n",
    "x3_values_state = [0] + list(state_pivot_[\"pct_state\"])\n",
    "y3_values_state = [0] + list(state_pivot_[\"cumsum_by_state\"])\n",
    "\n",
    "# plot the values and set for every subplot a title\n",
    "ax1.plot(y1_values)\n",
    "ax1.title.set_text(\"Porcentaje de clientes acumulados por ciudad\")\n",
    "\n",
    "ax2.plot(y2_values, color = \"green\", alpha = 0.5)\n",
    "ax2.title.set_text(\"Porcentaje de clientes acumulados por estado\")\n",
    "\n",
    "ax3.plot(x3_values_city, y3_values_city, label = \"Porcentaje de clientes acumulados por ciudad\")\n",
    "ax3.plot(x3_values_state, y3_values_state, label = \"Porcentaje de clientes acumulados por estado\", \n",
    "         color = \"green\", alpha = 0.5)\n",
    "ax3.title.set_text(\"Porcentaje de clientes acumulados por estado y ciudad\")\n",
    "\n",
    "ax3.legend()\n",
    "\n",
    "# create a title for the figure\n",
    "fig.suptitle('Distribución acumulada de clientes por ciudad y estado (en absoluto y relativo)', fontsize = 16);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Familia_prod</th>\n",
       "      <th>clients_per_prod</th>\n",
       "      <th>cumsum_by_prod</th>\n",
       "      <th>pct_prod</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Inversión</td>\n",
       "      <td>1000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Familia_prod  clients_per_prod  cumsum_by_prod  pct_prod\n",
       "0    Inversión           1000000             1.0       1.0"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create a groupby DataFrame by customer state, AHORA NO LO DESCOMPONGO, PORQUE ES LO MISMO PERO PARA CONSUMO POR ESTADO\n",
    "prod_pivot_ = full_2_subset.groupby(\"Familia_prod\").size()\\\n",
    ".sort_values(ascending = False).to_frame().reset_index().rename(columns = {0: \"clients_per_prod\"})\n",
    "\n",
    "prod_pivot_[\"cumsum_by_prod\"] = (prod_pivot_[\"clients_per_prod\"]/prod_pivot_[\"clients_per_prod\"].sum()).cumsum()\n",
    "\n",
    "prod_pivot_[\"pct_prod\"] = (1/prod_pivot_.shape[0])\n",
    "prod_pivot_[\"pct_prod\"] = prod_pivot_[\"pct_prod\"].cumsum()\n",
    "prod_pivot_.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "02b54ae4fcef88d4936c518f12e4c1a4a3ccb83eb22d3060789450414c249266"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
